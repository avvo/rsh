rsh_config(5) -- rsh configuration
==================================

## SYNOPSIS

**~/.rsh/config**
**/etc/rsh/rsh_config**

## DESCRIPTION

rsh(1) obtains configuration data from the following sources in the following
order:

    1. command-line options
    2. user's configuration file (<~/.rsh/config>)
    3. system-wide configuration file (</etc/rsh/rsh_config>)

For each parameter, the first obtained value will be used. The configuration
files contain sections separated by Host specifications, and that section is
only applied for hosts that match one of the patterns given in the
specification. The matched host name is the complete
protocol://user@host:port/env/stack/service line given on the command line.

Since the first obtained value for each parameter is used, more host-specific
declarations should be given near the beginning of the file, and general
defaults at the end.

The file contains keyword-argument pairs, one per line. Lines starting with
`#' and empty lines are interpreted as comments. Arguments may optionally be
enclosed in double quotes (") in order to represent arguments containing spaces.
Configuration options may be separated by whitespace or optional whitespace and
exactly one `='; the latter format is useful to avoid the need to quote
whitespace when specifying configuration options using -o.

The possible keywords and their meanings are as follows (note that keywords are
case-insensitive and arguments are case-sensitive):

* `Host`:
  

* `Environment`:
  

* `EscapeChar`:
  

* `HostName`:
  

* `LogLevel`:
  

* `Port`:
  

* `Protocol`:
  

* `RemoteCommand`:
  

* `RequestTty`:
  

* `SendEnv`:
  

* `Service`:
  

* `Stack`:
  

* `User`:
  

## PATTERNS

A pattern consists of zero or more non-whitespace characters, `*' (a wildcard
that matches zero or more characters), or `?' (a wildcard that matches exactly
one character). For example, to specify a set of declarations for any host in
the ".co.uk" set of domains, the following pattern could be used:

    Host *.co.uk/*

The following pattern would match any host in the 192.168.0.[0-9] network range:

    Host *192.168.0.?/*

A pattern-list is a comma-separated list of patterns. Patterns within
pattern-lists may be negated by preceding them with an exclamation mark (`!'). 
For example, to match all hosts except production the following entry could be
used:

    Host !*prod.example.com/*,*.example.com/*

## TOKENS

Arguments to some keywords can make use of tokens, which are expanded at
runtime:

          %%    A literal `%'.
          %e    The remote environment.
          %h    The remote hostname.
          %r    The remote username.
          %S    The remote stack.
          %s    The remote service.

     **Environment** accepts the tokens %%, %e, $S, %s

     **HostName** accepts the tokens %%, %h

     **RemoteCommand** accepts the tokens %%, %r

     **Stack** accepts the tokens %%, %e, $S, %s

     **Service** accepts the tokens %%, %e, $S, %s

## FILES

  * `~/.rsh/config`:
    This is the per-user configuration file. The file format and configuration
    options are described above.

  * `/etc/rsh/rsh_config`:
    Systemwide configuration file. The file format and configuration options
    are described above.

## AUTHORS

**avvoenv** is heavily inspired by OpenSSH, and portions of the man page have
been directly copied. It is written and maintained by the Avvo Infrastructure
Team <infrastructure@avvo.com>.

## SEE ALSO

rsh(1)
